data = read.csv(file = 'preprocessed_data_Tableau/two_drug.csv')
names(data)[names(data) == 'medication'] <- 'group'
data[order(data$group,data$Time),]
# for kaplan Meier analysis, the standard format need with column
#Time: time to events
#Status about whether the events happened or not 0:not happened or censored data 1:events happened
#medication: group about the medication the patient used
# this function need input with dataframe and a string state the duration unit
get_kaplan_meier_plot1 <- function(data,time_unit){
data = data.frame(Time = data$Time, Status = data$Status,group = data$group)
km_fit <- surv_fit(Surv(Time, Status) ~ group, data=data)
# if there is exactly two group then we can use the logrank test
whetherlogranktest = (length(unique(data$group))==2)
pvalue_text = ""
if(whetherlogranktest){
pvalue = toString(round(survdiff(Surv(Time, Status) ~ group, data=data)$pvalue,8))
pvalue_text = paste0("logrank pvalue: \n ",pvalue)
}
p = autoplot(km_fit) +
labs(x = paste("\n Survival Time in", time_unit) , y = "Survival Probabilities \n",
title = "Kaplan Meier plot") +
ylim(0, 1) +
annotate("text", x=max(data$Time)/5, y=0, label= pvalue_text)+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="#FF7A33", size = 12),
axis.title.y = element_text(face="bold", colour="#FF7A33", size = 12),
legend.title = element_text(face="bold", size = 10))
# ggplot do not developed for CI
ggplotly(p)
}
get_kaplan_meier_plot2 <- function(data,time_unit){
data = data.frame(Time = data$Time, Status = data$Status,group = data$group)
km_fit <- surv_fit(Surv(Time, Status) ~ group, data=data)
p = ggsurvplot(km_fit,
conf.int = TRUE,
risk.table = "abs_pct",
pval = TRUE,
pval.method = TRUE,
risk.table.height = 0.25, # avoid overlap the table
ggtheme = theme_bw()  )
(p)
ggplotly(p[[1]])
}
length(unique(data$group))
data
time_unit = 'Day'
get_kaplan_meier_plot1(data,time_unit)
# firstly load required package, if not those pacakges not installed before, then
#install.packages('survival')# can change the pacakge name inside the bracket
#install.packages('survival')
#install.packages("ggfortify")
#install.packages("ggsurvfit")
library(survival)
library(survminer)
library(ggplot2)
library(ggfortify)
library(plotly)
library(ggsurvfit)
data = read.csv(file = 'preprocessed_data_Tableau/two_drug.csv')
names(data)[names(data) == 'medication'] <- 'group'
data[order(data$group,data$Time),]
# for kaplan Meier analysis, the standard format need with column
#Time: time to events
#Status about whether the events happened or not 0:not happened or censored data 1:events happened
#medication: group about the medication the patient used
# this function need input with dataframe and a string state the duration unit
get_kaplan_meier_plot1 <- function(data,time_unit){
data = data.frame(Time = data$Time, Status = data$Status,group = data$group)
km_fit <- surv_fit(Surv(Time, Status) ~ group, data=data)
# if there is exactly two group then we can use the logrank test
whetherlogranktest = (length(unique(data$group))==2)
pvalue_text = ""
if(whetherlogranktest){
pvalue = toString(round(survdiff(Surv(Time, Status) ~ group, data=data)$pvalue,8))
pvalue_text = paste0("logrank pvalue: \n ",pvalue)
}
p = autoplot(km_fit) +
labs(x = paste("\n Survival Time in", time_unit) , y = "Survival Probabilities \n",
title = "Kaplan Meier plot") +
ylim(0, 1) +
annotate("text", x=max(data$Time)/5, y=0, label= pvalue_text)+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(face="bold", colour="#FF7A33", size = 12),
axis.title.y = element_text(face="bold", colour="#FF7A33", size = 12),
legend.title = element_text(face="bold", size = 10))
# ggplot do not developed for CI
ggplotly(p)
}
get_kaplan_meier_plot2 <- function(data,time_unit){
data = data.frame(Time = data$Time, Status = data$Status,group = data$group)
km_fit <- surv_fit(Surv(Time, Status) ~ group, data=data)
p = ggsurvplot(km_fit,
conf.int = TRUE,
risk.table = "abs_pct",
pval = TRUE,
pval.method = TRUE,
risk.table.height = 0.25, # avoid overlap the table
ggtheme = theme_bw()  )
(p)
ggplotly(p[[1]])
}
length(unique(data$group))
data
time_unit = 'Day'
get_kaplan_meier_plot1(data,time_unit)
get_kaplan_meier_plot2(data,time_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/all_die_1_year.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,duration_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/all_die_1_year.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,time_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/all_alive.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,time_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/all_die_1_day.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,time_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/all_die_prop_time.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,time_unit)
data =  read.csv(file = 'preprocessed_data_Tableau/two_condition.csv')
names(data)[names(data) == 'DESCRIPTION'] <- 'group'
get_kaplan_meier_plot1(data,time_unit)
data = read.csv(file = 'preprocessed_data_Tableau/two_drug.csv')
names(data)[names(data) == 'medication'] <- 'group'
survdiff(Surv(Time, Status) ~ group, data=data)$pvalue
data = read.csv(file = 'preprocessed_data_Tableau/two_drug.csv')
coxfit = coxph(Surv(Time, Status) ~ medication, data=data)
summary(coxfit)$sctest[3]
survdiff(Surv(Time, Status) ~ medication , data=cox_info)$pvalue
data = read.csv(file = 'preprocessed_data_Tableau/two_drug.csv')
coxfit = coxph(Surv(Time, Status) ~ medication + age.cancer., data=data)
summary(coxfit)
